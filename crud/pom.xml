<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc.
	and/or its affiliates, and individual contributors by the @authors tag. See
	the copyright.txt in the distribution for a full listing of individual contributors.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not
	use this file except in compliance with the License. You may obtain a copy
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
	by applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
	OF ANY KIND, either express or implied. See the License for the specific
	language governing permissions and limitations under the License. --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<name>tcs-avaliacao-candidatos-basecode</name>
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.com.goodyear.test</groupId>
	<artifactId>avaliacao-candidatos</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
    <project.resources.sourceEncoding>${project.build.sourceEncoding}</project.resources.sourceEncoding>

		<!-- JBoss dependency versions -->

		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
		<version.jboss.spec.javaee>1.0.3.Final</version.jboss.spec.javaee>

		<!-- Define the version of the JBoss BOMs we want to import to specify
			tested stacks. -->
		<version.jboss.bom>8.2.2.Final</version.jboss.bom>
		<version.wildfly>9.0.0.Alpha1</version.wildfly>


		<!-- other plugin versions -->
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<version.ear.plugin>2.10</version.ear.plugin>
		<version.ejb.plugin>2.3</version.ejb.plugin>
		<version.surefire.plugin>2.19.1</version.surefire.plugin>
		<version.war.plugin>2.5</version.war.plugin>

		<!-- ant-run-plugin -->
		<ant.run.version>1.8</ant.run.version>
		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<resteasy.version>3.0.19.Final</resteasy.version>
		<katharsis.version>2.8.2</katharsis.version>
		<reflections.version>0.9.9</reflections.version>
		<slf4jVersion>1.7.22</slf4jVersion>
		<activiti.version>5.22.0</activiti.version>
		<version.shrinkwrap.resolvers>2.2.4</version.shrinkwrap.resolvers>

		<!-- Spring Data version -->
		<version.spring.data.jpa>1.11.3.RELEASE</version.spring.data.jpa>

		<!-- QueryDSl version -->
		<querydsl.version>4.0.6</querydsl.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Define the version of the EJB jar so that we don't need to repeat
				ourselves in every module -->
			<dependency>
				<groupId>br.com.goodyear.test</groupId>
				<artifactId>avaliacao-candidatos-ejb</artifactId>
				<version>1.0</version>
				<type>ejb</type>
			</dependency>


			<!-- Define the version of the WAR so that we don't need to repeat ourselves
				in every module -->
			<dependency>
				<groupId>br.com.goodyear.test</groupId>
				<artifactId>avaliacao-candidatos-web</artifactId>
				<version>1.0</version>
				<type>war</type>
				<scope>compile</scope>
			</dependency>

			<!-- Override dependency resolver with latest version. This must go *BEFORE*
				the Arquillian BOM. -->
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${version.shrinkwrap.resolvers}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 7 APIs including a Bill
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
				of artifacts. We use this here so that we always get the correct versions
				of artifacts. Here we use the jboss-javaee-7.0-with-tools stack (you can
				read this as the JBoss stack of the Java EE 7 APIs, with some extras tools
				for your project, such as Arquillian for testing) and the jboss-javaee-7.0-with-hibernate
				stack you can read this as the JBoss stack of the Java EE 7 APIs, with extras
				from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-with-hibernate</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>${version.jboss.spec.javaee}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- testing -->
			<dependency>
			    <groupId>org.jboss.weld.se</groupId>
			    <artifactId>weld-se</artifactId>
			    <version>3.0.1.Final</version>
			    <scope>test</scope>
			</dependency>

			<dependency>
			    <groupId>org.jboss</groupId>
			    <artifactId>jandex</artifactId>
			    <version>2.0.3.Final</version>
			    <scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- The WildFly plugin deploys your ear to a local JBoss AS container -->
				<!-- Due to Maven's lack of intelligence with EARs we need to configure
					the wildfly maven plugin to skip deployment for all modules. We then enable
					it specifically in the ear module. -->
				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-maven-plugin</artifactId>
					<version>${version.wildfly.maven.plugin}</version>
					<inherited>true</inherited>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-archetype-plugin</artifactId>
				    <version>2.2</version>
				    <configuration>
				        <defaultEncoding>${project.build.sourceEncoding}</defaultEncoding>
				        <encoding>${project.build.sourceEncoding}</encoding>
				        <archetypeArtifactId>tcs-avaliacao-candidatos-basecode</archetypeArtifactId>
								<archetypeGroupId>com.tcs.swfactory</archetypeGroupId>
				        <archetypeVersion>1.0</archetypeVersion>
				        <archetypeFilteredExtentions>java,xml,properties</archetypeFilteredExtentions>
				    </configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.10</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4jVersion}</version>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <version>${slf4jVersion}</version>
		</dependency>


	</dependencies>

	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run
				just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian
				tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<repositories>
				<repository>
					<id>sonatype-nexus-snapshots</id>
					<name>Sonatype Nexus Snapshots</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
					</snapshots>
				</repository>
				<!-- PrimeFaces Repo -->
				<repository>
				    <id>prime-repo</id>
				    <name>PrimeFaces Maven Repository</name>
				    <url>http://repository.primefaces.org</url>
				    <layout>default</layout>
				</repository>
			</repositories>
			<pluginRepositories>
			  <pluginRepository>
			    <id>maven.oracle.com</id>
			    <url>https://maven.oracle.com</url>
			  </pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles>
<modules>  <module>avaliacao-candidatos-ejb</module>
    <module>avaliacao-candidatos-web</module>
    <module>avaliacao-candidatos-ear</module>
  </modules>
</project>
